name: Publish Binaries

on:
  push:
    branches:
      - main  # Change this to match your repository's default branch

jobs:
  build_linux:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: sudo apt-get install gcc g++ git cmake ninja-build lsb-release libsdl2-dev libpng-dev libsdl2-net-dev libzip-dev zipcmp zipmerge ziptool nlohmann-json3-dev libtinyxml2-dev libspdlog-dev libboost-dev libopengl-dev
      - name: Install latest SDL
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          wget https://www.libsdl.org/release/SDL2-2.24.1.tar.gz
          tar -xzf SDL2-2.24.1.tar.gz
          cd SDL2-2.24.1
          ./configure
          make -j 10
          sudo make install
      - name: Install latest tinyxml2
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          wget https://github.com/leethomason/tinyxml2/archive/refs/tags/10.0.0.tar.gz
          tar -xzf 10.0.0.tar.gz
          cd tinyxml2-10.0.0
          mkdir build
          cd build
          cmake ..
          make
          sudo make install
      - name: Build
        run: |
          cmake -H. -Bbuild-cmake -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build-cmake -j
      - name: Publish Linux Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build-cmake/*
          tag_name: v1.0.0  # Replace with your release tag
          release_name: Linux Release v1.0.0  # Replace with your release name
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  build_windows:
#    runs-on: windows-latest
    
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2

#    - name: Install Windows Dependencies
#      run: |
#        choco install -y cmake ninja

#    - name: Configure and Build Windows Binaries
#      run: |
#        cmake -H. -Bbuild-cmake -G"Ninja" -DCMAKE_BUILD_TYPE=Release
#        cmake --build build-cmake --config Release -j

#    - name: Publish Windows Release
#      uses: softprops/action-gh-release@v1
#      with:
        files: |
#          build-cmake/*
#        tag_name: v1.0.0  # Replace with your release tag
#        release_name: Windows Release v1.0.0  # Replace with your release name
#        draft: false
#        prerelease: false
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_macos:
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: brew install sdl2 libpng glew ninja cmake libzip nlohmann-json tinyxml2 spdlog
      - name: Build
        run: |
          cmake -H. -Bbuild-cmake -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build-cmake -j

      - name: Publish macOS Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build-cmake/*
          tag_name: v1.0.0  # Replace with your release tag
          release_name: macOS Release v1.0.0  # Replace with your release name
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}